concurrency:
  cancel-in-progress: true
  group: herta-build

on:
  push:
    tags: v*
    branches: master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          # Windows
          - i686-pc-windows-gnu
          - x86_64-pc-windows-gnu
          # Linux
          - i686-unknown-linux-gnu
          - x86_64-unknown-linux-gnu


    steps:
      - uses: actions/checkout@v2

      - name: Install x86 Build Dependencies
        if: ${{ matrix.target == 'i686-pc-windows-gnu' || matrix.target == 'i686-unknown-linux-gnu' }}
        run: sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install libssl-dev:i386 clang cmake

      - name: Install x86_64 Build Dependencies
        if: ${{ matrix.target != 'i686-pc-windows-gnu' && matrix.target != 'i686-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install pkg-config libssl-dev clang cmake

      - uses: actions-rs/toolchain@v1
        name: Setup rust
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          override: true

      - uses: actions-rs/cargo@v1
        name: Build release (${{ matrix.target }})
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare artifacts (linux)
        shell: true
        run: |
          BIN_TARGET=$(echo ${{ matrix.target }} | cut -d/ -f 3 | cut -d- -f 1)
          cp target/${{ matrix.target }}/release/herta-bin herta-bin.$BIN_TARGET
        if: contains(matrix.target, 'linux')

      - name: Prepare artifacts (windows)
        shell: true
        run: |
          BIN_TARGET=$(echo ${{ matrix.target }} | cut -d/ -f 3 | cut -d- -f 1)
          cp target/${{ matrix.target }}/release/herta-bin.exe herta-bin-$BIN_TARGET.exe
        if: contains(matrix.target, 'windows')

      - uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: herta-bin*
        if: startsWith(github.ref, 'refs/tags/')